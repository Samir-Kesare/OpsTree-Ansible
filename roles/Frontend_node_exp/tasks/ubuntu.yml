---
# tasks/main.yml
- name: Download Node Exporter tarball
  get_url:
    url: "{{ node_exporter_url }}"
    dest: "/tmp/node_exporter.tar.gz"

- name: Extract Node Exporter tarball
  unarchive:
    src: "/tmp/node_exporter.tar.gz"
    dest: "/tmp"
    remote_src: true
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.{{ node_exporter_architecture }}"

- name: Debug node exporter binary path
  debug:
    msg: "Node Exporter binary path: {{ '/tmp/node_exporter-1.7.0.linux-amd64/node_exporter' }}"

- name: Copy Node Exporter binary to /usr/local/bin
  become: true 
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.{{ node_exporter_architecture }}/node_exporter"
    dest: "/usr/local/bin/node_exporter"
    remote_src: true
    mode: "0755"

- name: Clean up downloaded files
  file:
    path: "/tmp/{{ item }}"
    state: absent
  with_items:
    - "node_exporter.tar.gz"
    - "node_exporter-{{ node_exporter_version }}.{{ node_exporter_architecture }}"

- name: Copy systemd service template
  ansible.builtin.template:
    src: "{{ node_exporter_service_template_src }}"
    dest: "{{ node_exporter_service_dest }}"
  
- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable node-exporter service
  become: true
  systemd:
    name: node-exporter
    enabled: yes

- name: Start node-exporter service
  become: true
  systemd:
    name: node-exporter
    state: started

- name: Check status of node-exporter service
  become: true
  systemd:
    name: node-exporter
    state: started
  register: node_exporter_status

- debug:
    msg: |
      Node Exporter Status:
      ActiveState: {{ node_exporter_status.status.ActiveState }}
      Description: {{ node_exporter_status.status.Description }}
      UnitFileState: {{ node_exporter_status.status.UnitFileState }}
      TasksCurrent: {{ node_exporter_status.status.TasksCurrent }}
